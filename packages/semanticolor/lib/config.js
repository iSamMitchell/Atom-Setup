'use strict';

let defaultOptions = ['contrast', 'mute', 'theme', 'colorize', 'defer'];
let options = ['contrast', 'mute', 'theme', 'colorize', 'defer', 'default'];

module.exports = {
	base: {
		type: 'object',
		properties: {
			variable: {
				type: 'string',
				title: 'Variables (scope: \'variable\')',
				'default': 'colorize',
				'enum': defaultOptions,
				order: 1,
			},
			comment: {
				type: 'string',
				title: 'Comments (scope: \'comment\')',
				'default': 'contrast',
				'enum': defaultOptions,
				order: 2,
			},
			primitive: {
				type: 'string',
				title: 'Primitives (scope: \'primitive\')',
				'default': 'mute',
				'enum': defaultOptions,
				order: 3,
			},
			storage_modifier: {
				type: 'string',
				title: 'Storage modifiers (scope: \'storage.modifier\')',
				'default': 'mute',
				'enum': defaultOptions,
				order: 4,
			},
			storage_type: {
				type: 'string',
				title: 'Storage types (scope: \'storage.type\')',
				'default': 'mute',
				'enum': defaultOptions,
				order: 5,
			},
			support_type: {
				type: 'string',
				title: 'Support types (scope: \'support.type\')',
				'default': 'colorize',
				'enum': defaultOptions,
				order: 6,
			},
			language: {
				type: 'string',
				title: 'Language elements (scope: \'language\')',
				'default': 'mute',
				'enum': defaultOptions,
				order: 7,
			},
			keyword: {
				type: 'string',
				title: 'Keywords (scope: \'keyword\')',
				'default': 'mute',
				'enum': defaultOptions,
				order: 8,
			},
			operator: {
				type: 'string',
				title: 'Operators (scope: \'operator\')',
				'default': 'mute',
				'enum': defaultOptions,
				order: 9,
			},
			punctuation: {
				type: 'string',
				title: 'Punctuation (scope: \'punctuation\')',
				'default': 'defer',
				'enum': defaultOptions,
				order: 10,
			},
			markup: {
				type: 'string',
				title: 'Markup (scope: \'markup\')',
				'default': 'defer',
				'enum': defaultOptions,
				order: 11,
			},
			string_quoted: {
				type: 'string',
				title: 'String constants (scope: \'string.quoted\')',
				'default': 'theme',
				'enum': defaultOptions,
				order: 12,
			},
			regexp: {
				type: 'string',
				title: 'Regular expressions (scope: \'regexp\')',
				'default': 'theme',
				'enum': defaultOptions,
				order: 13,
			},
			support_constant: {
				type: 'string',
				title: 'Support constants (scope: \'support.constant\')',
				'default': 'theme',
				'enum': defaultOptions,
				order: 14,
			},
			constant_numeric: {
				type: 'string',
				title: 'Numeric constants (scope: \'constant.numeric\')',
				'default': 'theme',
				'enum': defaultOptions,
				order: 15,
			},
			source: {
				type: 'string',
				title: 'Source (scope: \'source\')',
				'default': 'colorize',
				'enum': defaultOptions,
				order: 16,
			},
			name: {
				type: 'string',
				title: 'Name (scope: \'name\')',
				'default': 'colorize',
				'enum': defaultOptions,
				order: 17,
			},
			'attribute-name': {
				type: 'string',
				title: 'Attribute name (scope: \'attribute-name\')',
				'default': 'colorize',
				'enum': defaultOptions,
				order: 18,
			},
			everythingElse: {
				type: 'string',
				title: 'Everything else',
				'default': 'theme',
				'enum': defaultOptions,
				order: 19,
			},
		},
	},
	empty: {
		type: 'object',
		collapsed: true,
		properties: {
			enabled: {
				type: 'boolean',
				title: 'Enabled',
				'default': 'true',
				order: 0,
			},
			variable: {
				type: 'string',
				title: 'Variables (scope: \'variable\')',
				'default': 'default',
				'enum': options,
				order: 1,
			},
			comment: {
				type: 'string',
				title: 'Comments (scope: \'comment\')',
				'default': 'default',
				'enum': options,
				order: 2,
			},
			primitive: {
				type: 'string',
				title: 'Primitives (scope: \'primitive\')',
				'default': 'default',
				'enum': options,
				order: 3,
			},
			storage_modifier: {
				type: 'string',
				title: 'Storage modifiers (scope: \'storage.modifier\')',
				'default': 'default',
				'enum': options,
				order: 4,
			},
			storage_type: {
				type: 'string',
				title: 'Storage types (scope: \'storage.type\')',
				'default': 'default',
				'enum': options,
				order: 5,
			},
			support_type: {
				type: 'string',
				title: 'Support types (scope: \'support.type\')',
				'default': 'default',
				'enum': options,
				order: 6,
			},
			language: {
				type: 'string',
				title: 'Language elements (scope: \'language\')',
				'default': 'default',
				'enum': options,
				order: 7,
			},
			keyword: {
				type: 'string',
				title: 'Keywords (scope: \'keyword\')',
				'default': 'default',
				'enum': options,
				order: 8,
			},
			operator: {
				type: 'string',
				title: 'Operators (scope: \'operator\')',
				'default': 'default',
				'enum': options,
				order: 9,
			},
			punctuation: {
				type: 'string',
				title: 'Punctuation (scope: \'punctuation\')',
				'default': 'default',
				'enum': options,
				order: 10,
			},
			markup: {
				type: 'string',
				title: 'Markup (scope: \'markup\')',
				'default': 'default',
				'enum': options,
				order: 11,
			},
			string_quoted: {
				type: 'string',
				title: 'String constants (scope: \'string.quoted\')',
				'default': 'default',
				'enum': options,
				order: 12,
			},
			regexp: {
				type: 'string',
				title: 'Regular expressions (scope: \'regexp\')',
				'default': 'default',
				'enum': options,
				order: 13,
			},
			support_constant: {
				type: 'string',
				title: 'Support constants (scope: \'support.constant\')',
				'default': 'default',
				'enum': options,
				order: 14,
			},
			constant_numeric: {
				type: 'string',
				title: 'Numeric constants (scope: \'constant.numeric\')',
				'default': 'default',
				'enum': options,
				order: 15,
			},
			source: {
				type: 'string',
				title: 'Source (scope: \'source\')',
				'default': 'default',
				'enum': options,
				order: 16,
			},
			name: {
				type: 'string',
				title: 'Name (scope: \'name\')',
				'default': 'default',
				'enum': options,
				order: 17,
			},
			'attribute-name': {
				type: 'string',
				title: 'Attribute name (scope: \'attribute-name\')',
				'default': 'default',
				'enum': options,
				order: 18,
			},
			everythingElse: {
				type: 'string',
				title: 'Everything else',
				'default': 'default',
				'enum': options,
				order: 19,
			},
		},
	},
};
